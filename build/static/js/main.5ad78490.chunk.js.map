{"version":3,"sources":["api/backend.tsx","components/ListaDespesas/index.tsx","helpers/numberHelpers.ts","helpers/dataHelpers.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getDespesasEndpoint","_x","_getDespesasEndpoint","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","wrap","_context","prev","next","axios","get","sent","abrupt","t0","console","error","finish","stop","ListaDespesas","_ref","despesas","_jsx","Box","sx","minWidth","borderColor","display","justifyContent","marginY","boxShadow","children","_jsxs","TableContainer","component","Paper","maxWidth","log","Table","TableHead","TableRow","TableCell","align","TableBody","sort","a","b","dia","localeCompare","map","despesa","hover","border","descricao","categoria","valor","id","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","MONTHS","totalDasDespesas","reduce","currentDespesa","App","value","_useState","useState","_useState2","_slicedToArray","setDespesas","_useState3","_useState4","selectedYear","setSelectedYear","_useState5","_useState6","selectedMonth","setSelectedMonth","_useState7","_useState8","years","setYears","_useState9","_useState10","months","setMonths","useEffect","_fetchData","data","anos","uniqueAnos","statusText","item","mes","split","filter","index","self","indexOf","fetchData","_fetchData2","_callee2","meses","uniqueMeses","_context2","includes","_fetchData3","_callee3","_context3","concat","_Fragment","marginTop","alignItems","gap","paddingX","FormControl","marginRight","InputLabel","Select","labelId","label","onChange","event","newYear","target","MenuItem","newMonth","disabled","month","Number","toLocaleString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ad78490.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nasync function getDespesasEndpoint(url: string) {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response;\r\n  } catch (error) {\r\n    console.error(error);\r\n  } finally {\r\n  }\r\n}\r\n\r\nexport { getDespesasEndpoint };\r\n","import * as React from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { despesa } from \"../../api/types\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nfunction createData(\r\n  id: number,\r\n  descricao: string,\r\n  categoria: string,\r\n  dia: string,\r\n  valor: number\r\n) {\r\n  return { id, descricao, categoria, dia, valor };\r\n}\r\n\r\n// const rows = [\r\n//   createData(1, \"Frozen yoghurt\", \"159\", \"6.0\", 24),\r\n//   createData(2, \"Ice cream sandwich\", \"237\", \"9.0\", 37),\r\n//   createData(3, \"Eclair\", \"262\", \"16.0\", 24),\r\n//   createData(4, \"Cupcake\", \"305\", \"3.7\", 67),\r\n//   createData(5, \"Gingerbread\", \"356\", \"16.0\", 49),\r\n// ];\r\n\r\ntype ListaDespesasProps = {\r\n  despesas: despesa[];\r\n};\r\n\r\nconsole.log();\r\nfunction ListaDespesas({ despesas }: ListaDespesasProps) {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minWidth: 650,\r\n        borderColor: \"grey.900\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        marginY: 10,\r\n        boxShadow: 3,\r\n      }}\r\n    >\r\n      <TableContainer\r\n        component={Paper}\r\n        sx={{\r\n          minWidth: 650,\r\n          maxWidth: \"90%\",\r\n        }}\r\n      >\r\n        {console.log(\"despesas\", despesas)}\r\n        <Table aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"left\">Despesa</TableCell>\r\n              <TableCell align=\"left\">Categoria</TableCell>\r\n              <TableCell align=\"left\">Dia</TableCell>\r\n              <TableCell align=\"center\">Valor (R$)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {despesas\r\n              .sort((a: despesa, b: despesa) => a.dia.localeCompare(b.dia))\r\n              .map((despesa) => (\r\n                <TableRow\r\n                  hover\r\n                  key={despesa.id}\r\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                >\r\n                  <TableCell align=\"left\">{despesa.descricao}</TableCell>\r\n                  <TableCell align=\"left\">{despesa.categoria}</TableCell>\r\n                  <TableCell align=\"left\">{despesa.dia}</TableCell>\r\n                  <TableCell align=\"center\">{despesa.valor}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport { ListaDespesas };\r\n","const numberFormatter = new Intl.NumberFormat(\"pt-br\", {\r\n  style: \"decimal\",\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\n\r\nexport function helperFormatNumberToLocaleBR(value: number) {\r\n  return Number(value).toLocaleString(\"pt-BR\");\r\n}\r\n\r\nexport function helperFormatMoneyToLocaleBR(value: number) {\r\n  const prefix = \"R$ \";\r\n  return `${prefix}${Number(value).toLocaleString(\"pt-BR\")}`;\r\n}\r\n","export const MONTHS = [\r\n  \"Janeiro\",\r\n  \"Fevereiro\",\r\n  \"Março\",\r\n  \"Abril\",\r\n  \"Maio\",\r\n  \"Junho\",\r\n  \"Julho\",\r\n  \"Agosto\",\r\n  \"Setembro\",\r\n  \"Outubro\",\r\n  \"Novembro\",\r\n  \"Dezembro\",\r\n];\r\n\r\nexport function formatMonth(month: string) {\r\n  return `${MONTHS[Number(month) - 1]}`;\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { despesa } from \"./api/types\";\r\nimport { getDespesasEndpoint } from \"./api/backend\";\r\nimport { ListaDespesas } from \"./components/ListaDespesas\";\r\nimport { Box } from \"@mui/system\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport { helperFormatMoneyToLocaleBR } from \"./helpers/numberHelpers\";\r\nimport { formatMonth } from \"./helpers/dataHelpers\";\r\n\r\nfunction App() {\r\n  const [despesas, setDespesas] = useState<despesa[]>([]);\r\n  const [selectedYear, setSelectedYear] = useState(\"\");\r\n  const [selectedMonth, setSelectedMonth] = useState(\"\");\r\n  const [years, setYears] = useState<string[]>([]);\r\n  const [months, setMonths] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await getDespesasEndpoint(\r\n        `http://localhost:3001/despesas?\\_sort=mes,dia`\r\n      );\r\n      if (response?.statusText === \"OK\") {\r\n        const { data } = response;\r\n\r\n        const anos = data.map((item: despesa) => item.mes.split(\"-\")[0]);\r\n        const uniqueAnos = anos.filter(\r\n          (item: string, index: number, self: string) =>\r\n            index === self.indexOf(item)\r\n        );\r\n\r\n        setYears(uniqueAnos);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await getDespesasEndpoint(\r\n        `http://localhost:3001/despesas?\\_sort=mes,dia`\r\n      );\r\n      if (response?.statusText === \"OK\") {\r\n        const { data } = response;\r\n        const meses = data\r\n          .filter((item: despesa) => item.mes.includes(selectedYear))\r\n          .map((item: despesa) => item.mes.split(\"-\")[1]);\r\n\r\n        const uniqueMeses = meses\r\n          .filter(\r\n            (item: string, index: number, self: string) =>\r\n              index === self.indexOf(item)\r\n          )\r\n          .sort((a: string, b: string) => a.localeCompare(b));\r\n\r\n        setMonths(uniqueMeses);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [selectedYear]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await getDespesasEndpoint(\r\n        `http://localhost:3001/despesas?mes=${selectedYear}-${selectedMonth}`\r\n      );\r\n      if (response?.statusText === \"OK\") {\r\n        const { data } = response;\r\n        const newDespesas = data;\r\n\r\n        setDespesas(newDespesas);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [selectedYear, selectedMonth]);\r\n\r\n  function yearHandleChange(event: SelectChangeEvent) {\r\n    setSelectedMonth(\"\");\r\n    const newYear = event.target.value;\r\n    setSelectedYear(newYear);\r\n  }\r\n\r\n  function monthHandleChange(event: SelectChangeEvent) {\r\n    const newMonth = event.target.value;\r\n    setSelectedMonth(newMonth);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          minWidth: 120,\r\n          marginTop: 8,\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          gap: 5,\r\n          paddingX: \"5%\",\r\n        }}\r\n      >\r\n        <Box>\r\n          <FormControl sx={{ minWidth: 120, marginRight: 5 }}>\r\n            <InputLabel id=\"year\">Ano</InputLabel>\r\n            <Select\r\n              labelId=\"year\"\r\n              id=\"year\"\r\n              value={selectedYear}\r\n              label=\"Ano\"\r\n              onChange={yearHandleChange}\r\n            >\r\n              {years.map((item) => (\r\n                <MenuItem value={item}>{item}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl sx={{ minWidth: 120 }}>\r\n            <InputLabel id=\"month\">Mês</InputLabel>\r\n            <Select\r\n              labelId=\"month\"\r\n              id=\"month\"\r\n              value={selectedMonth}\r\n              label=\"Mes\"\r\n              onChange={monthHandleChange}\r\n              disabled={!selectedYear}\r\n            >\r\n              {months.map((item: string) => (\r\n                <MenuItem value={item}>{formatMonth(item)}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        {selectedYear && selectedMonth && (\r\n          <span>\r\n            Despesa Total:{\" \"}\r\n            <strong>\r\n              {helperFormatMoneyToLocaleBR(totalDasDespesas(despesas))}\r\n            </strong>\r\n          </span>\r\n        )}\r\n      </Box>\r\n\r\n      <ListaDespesas despesas={despesas} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction totalDasDespesas(despesas: despesa[]) {\r\n  const total = despesas.reduce(\r\n    (prev: number, currentDespesa: despesa) => prev + currentDespesa.valor,\r\n    0\r\n  );\r\n\r\n  return total;\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}